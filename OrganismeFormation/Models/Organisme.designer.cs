#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrganismeFormation.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GestionOF")]
	public partial class OrganismeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertUtilisateursLiguesDroits(UtilisateursLiguesDroits instance);
    partial void UpdateUtilisateursLiguesDroits(UtilisateursLiguesDroits instance);
    partial void DeleteUtilisateursLiguesDroits(UtilisateursLiguesDroits instance);
    partial void InsertCandidats(Candidats instance);
    partial void UpdateCandidats(Candidats instance);
    partial void DeleteCandidats(Candidats instance);
    partial void InsertCandidatsFormations(CandidatsFormations instance);
    partial void UpdateCandidatsFormations(CandidatsFormations instance);
    partial void DeleteCandidatsFormations(CandidatsFormations instance);
    partial void InsertFormations(Formations instance);
    partial void UpdateFormations(Formations instance);
    partial void DeleteFormations(Formations instance);
    partial void InsertFormationsLieux(FormationsLieux instance);
    partial void UpdateFormationsLieux(FormationsLieux instance);
    partial void DeleteFormationsLieux(FormationsLieux instance);
    partial void InsertHabilitations(Habilitations instance);
    partial void UpdateHabilitations(Habilitations instance);
    partial void DeleteHabilitations(Habilitations instance);
    partial void InsertLieux(Lieux instance);
    partial void UpdateLieux(Lieux instance);
    partial void DeleteLieux(Lieux instance);
    partial void InsertLigues(Ligues instance);
    partial void UpdateLigues(Ligues instance);
    partial void DeleteLigues(Ligues instance);
    partial void InsertOrganisateurs(Organisateurs instance);
    partial void UpdateOrganisateurs(Organisateurs instance);
    partial void DeleteOrganisateurs(Organisateurs instance);
    partial void InsertOrganisations(Organisations instance);
    partial void UpdateOrganisations(Organisations instance);
    partial void DeleteOrganisations(Organisations instance);
    partial void InsertOrganismes(Organismes instance);
    partial void UpdateOrganismes(Organismes instance);
    partial void DeleteOrganismes(Organismes instance);
    partial void InsertPassages(Passages instance);
    partial void UpdatePassages(Passages instance);
    partial void DeletePassages(Passages instance);
    partial void InsertPersonnel(Personnel instance);
    partial void UpdatePersonnel(Personnel instance);
    partial void DeletePersonnel(Personnel instance);
    partial void InsertPorteurs(Porteurs instance);
    partial void UpdatePorteurs(Porteurs instance);
    partial void DeletePorteurs(Porteurs instance);
    partial void InsertPresidentOrganisme(PresidentOrganisme instance);
    partial void UpdatePresidentOrganisme(PresidentOrganisme instance);
    partial void DeletePresidentOrganisme(PresidentOrganisme instance);
    partial void InsertPrestataires(Prestataires instance);
    partial void UpdatePrestataires(Prestataires instance);
    partial void DeletePrestataires(Prestataires instance);
    partial void InsertResponsable(Responsable instance);
    partial void UpdateResponsable(Responsable instance);
    partial void DeleteResponsable(Responsable instance);
    partial void InsertResultats(Resultats instance);
    partial void UpdateResultats(Resultats instance);
    partial void DeleteResultats(Resultats instance);
    partial void InsertResultatsUC(ResultatsUC instance);
    partial void UpdateResultatsUC(ResultatsUC instance);
    partial void DeleteResultatsUC(ResultatsUC instance);
    partial void InsertSexes(Sexes instance);
    partial void UpdateSexes(Sexes instance);
    partial void DeleteSexes(Sexes instance);
    partial void InsertTuteurs(Tuteurs instance);
    partial void UpdateTuteurs(Tuteurs instance);
    partial void DeleteTuteurs(Tuteurs instance);
    partial void InsertTypedeFinancements(TypedeFinancements instance);
    partial void UpdateTypedeFinancements(TypedeFinancements instance);
    partial void DeleteTypedeFinancements(TypedeFinancements instance);
    partial void InsertTypedeFormations(TypedeFormations instance);
    partial void UpdateTypedeFormations(TypedeFormations instance);
    partial void DeleteTypedeFormations(TypedeFormations instance);
    partial void InsertTypeOrganisateurs(TypeOrganisateurs instance);
    partial void UpdateTypeOrganisateurs(TypeOrganisateurs instance);
    partial void DeleteTypeOrganisateurs(TypeOrganisateurs instance);
    partial void InsertUtilisateurs(Utilisateurs instance);
    partial void UpdateUtilisateurs(Utilisateurs instance);
    partial void DeleteUtilisateurs(Utilisateurs instance);
    #endregion
		
		public OrganismeDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GestionOFConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OrganismeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrganismeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrganismeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrganismeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admin
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<UtilisateursLiguesDroits> UtilisateursLiguesDroits
		{
			get
			{
				return this.GetTable<UtilisateursLiguesDroits>();
			}
		}
		
		public System.Data.Linq.Table<Candidats> Candidats
		{
			get
			{
				return this.GetTable<Candidats>();
			}
		}
		
		public System.Data.Linq.Table<CandidatsFormations> CandidatsFormations
		{
			get
			{
				return this.GetTable<CandidatsFormations>();
			}
		}
		
		public System.Data.Linq.Table<Formations> Formations
		{
			get
			{
				return this.GetTable<Formations>();
			}
		}
		
		public System.Data.Linq.Table<FormationsLieux> FormationsLieux
		{
			get
			{
				return this.GetTable<FormationsLieux>();
			}
		}
		
		public System.Data.Linq.Table<Habilitations> Habilitations
		{
			get
			{
				return this.GetTable<Habilitations>();
			}
		}
		
		public System.Data.Linq.Table<Lieux> Lieux
		{
			get
			{
				return this.GetTable<Lieux>();
			}
		}
		
		public System.Data.Linq.Table<Ligues> Ligues
		{
			get
			{
				return this.GetTable<Ligues>();
			}
		}
		
		public System.Data.Linq.Table<Organisateurs> Organisateurs
		{
			get
			{
				return this.GetTable<Organisateurs>();
			}
		}
		
		public System.Data.Linq.Table<Organisations> Organisations
		{
			get
			{
				return this.GetTable<Organisations>();
			}
		}
		
		public System.Data.Linq.Table<Organismes> Organismes
		{
			get
			{
				return this.GetTable<Organismes>();
			}
		}
		
		public System.Data.Linq.Table<Passages> Passages
		{
			get
			{
				return this.GetTable<Passages>();
			}
		}
		
		public System.Data.Linq.Table<Personnel> Personnel
		{
			get
			{
				return this.GetTable<Personnel>();
			}
		}
		
		public System.Data.Linq.Table<Porteurs> Porteurs
		{
			get
			{
				return this.GetTable<Porteurs>();
			}
		}
		
		public System.Data.Linq.Table<PresidentOrganisme> PresidentOrganisme
		{
			get
			{
				return this.GetTable<PresidentOrganisme>();
			}
		}
		
		public System.Data.Linq.Table<Prestataires> Prestataires
		{
			get
			{
				return this.GetTable<Prestataires>();
			}
		}
		
		public System.Data.Linq.Table<Responsable> Responsable
		{
			get
			{
				return this.GetTable<Responsable>();
			}
		}
		
		public System.Data.Linq.Table<Resultats> Resultats
		{
			get
			{
				return this.GetTable<Resultats>();
			}
		}
		
		public System.Data.Linq.Table<ResultatsUC> ResultatsUC
		{
			get
			{
				return this.GetTable<ResultatsUC>();
			}
		}
		
		public System.Data.Linq.Table<Sexes> Sexes
		{
			get
			{
				return this.GetTable<Sexes>();
			}
		}
		
		public System.Data.Linq.Table<Tuteurs> Tuteurs
		{
			get
			{
				return this.GetTable<Tuteurs>();
			}
		}
		
		public System.Data.Linq.Table<TypedeFinancements> TypedeFinancements
		{
			get
			{
				return this.GetTable<TypedeFinancements>();
			}
		}
		
		public System.Data.Linq.Table<TypedeFormations> TypedeFormations
		{
			get
			{
				return this.GetTable<TypedeFormations>();
			}
		}
		
		public System.Data.Linq.Table<TypeOrganisateurs> TypeOrganisateurs
		{
			get
			{
				return this.GetTable<TypeOrganisateurs>();
			}
		}
		
		public System.Data.Linq.Table<Utilisateurs> Utilisateurs
		{
			get
			{
				return this.GetTable<Utilisateurs>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _id;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _login;
		
		private string _password;
		
		private EntityRef<Admin> _Admin2;
		
		private EntityRef<Admin> _Admin1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(decimal value);
    partial void OnidChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public Admin()
		{
			this._Admin2 = default(EntityRef<Admin>);
			this._Admin1 = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Admin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(50)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(50)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(150)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Admin", Storage="_Admin2", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Admin Admin2
		{
			get
			{
				return this._Admin2.Entity;
			}
			set
			{
				Admin previousValue = this._Admin2.Entity;
				if (((previousValue != value) 
							|| (this._Admin2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin2.Entity = null;
						previousValue.Admin1 = null;
					}
					this._Admin2.Entity = value;
					if ((value != null))
					{
						value.Admin1 = this;
					}
					this.SendPropertyChanged("Admin2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Admin", Storage="_Admin1", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Admin Admin1
		{
			get
			{
				return this._Admin1.Entity;
			}
			set
			{
				Admin previousValue = this._Admin1.Entity;
				if (((previousValue != value) 
							|| (this._Admin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin1.Entity = null;
						previousValue.Admin2 = null;
					}
					this._Admin1.Entity = value;
					if ((value != null))
					{
						value.Admin2 = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(decimal);
					}
					this.SendPropertyChanged("Admin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UtilisateursLiguesDroits")]
	public partial class UtilisateursLiguesDroits : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private decimal _IdUtilisateur;
		
		private decimal _IdLigue;
		
		private string _Niveau;
		
		private EntityRef<Ligues> _Ligues;
		
		private EntityRef<Utilisateurs> _Utilisateurs;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnIdUtilisateurChanging(decimal value);
    partial void OnIdUtilisateurChanged();
    partial void OnIdLigueChanging(decimal value);
    partial void OnIdLigueChanged();
    partial void OnNiveauChanging(string value);
    partial void OnNiveauChanged();
    #endregion
		
		public UtilisateursLiguesDroits()
		{
			this._Ligues = default(EntityRef<Ligues>);
			this._Utilisateurs = default(EntityRef<Utilisateurs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUtilisateur", DbType="Decimal(18,0) NOT NULL")]
		public decimal IdUtilisateur
		{
			get
			{
				return this._IdUtilisateur;
			}
			set
			{
				if ((this._IdUtilisateur != value))
				{
					if (this._Utilisateurs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUtilisateurChanging(value);
					this.SendPropertyChanging();
					this._IdUtilisateur = value;
					this.SendPropertyChanged("IdUtilisateur");
					this.OnIdUtilisateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLigue", DbType="Decimal(18,0) NOT NULL")]
		public decimal IdLigue
		{
			get
			{
				return this._IdLigue;
			}
			set
			{
				if ((this._IdLigue != value))
				{
					if (this._Ligues.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLigueChanging(value);
					this.SendPropertyChanging();
					this._IdLigue = value;
					this.SendPropertyChanged("IdLigue");
					this.OnIdLigueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Niveau", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Niveau
		{
			get
			{
				return this._Niveau;
			}
			set
			{
				if ((this._Niveau != value))
				{
					this.OnNiveauChanging(value);
					this.SendPropertyChanging();
					this._Niveau = value;
					this.SendPropertyChanged("Niveau");
					this.OnNiveauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ligues_UtilisateursLiguesDroits", Storage="_Ligues", ThisKey="IdLigue", OtherKey="Id", IsForeignKey=true)]
		public Ligues Ligues
		{
			get
			{
				return this._Ligues.Entity;
			}
			set
			{
				Ligues previousValue = this._Ligues.Entity;
				if (((previousValue != value) 
							|| (this._Ligues.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ligues.Entity = null;
						previousValue.UtilisateursLiguesDroits.Remove(this);
					}
					this._Ligues.Entity = value;
					if ((value != null))
					{
						value.UtilisateursLiguesDroits.Add(this);
						this._IdLigue = value.Id;
					}
					else
					{
						this._IdLigue = default(decimal);
					}
					this.SendPropertyChanged("Ligues");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateurs_UtilisateursLiguesDroits", Storage="_Utilisateurs", ThisKey="IdUtilisateur", OtherKey="Id", IsForeignKey=true)]
		public Utilisateurs Utilisateurs
		{
			get
			{
				return this._Utilisateurs.Entity;
			}
			set
			{
				Utilisateurs previousValue = this._Utilisateurs.Entity;
				if (((previousValue != value) 
							|| (this._Utilisateurs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilisateurs.Entity = null;
						previousValue.UtilisateursLiguesDroits.Remove(this);
					}
					this._Utilisateurs.Entity = value;
					if ((value != null))
					{
						value.UtilisateursLiguesDroits.Add(this);
						this._IdUtilisateur = value.Id;
					}
					else
					{
						this._IdUtilisateur = default(decimal);
					}
					this.SendPropertyChanged("Utilisateurs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Candidats")]
	public partial class Candidats : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _NumeroLicence;
		
		private string _Telephone;
		
		private string _Email;
		
		private System.Nullable<decimal> _SexeId;
		
		private EntitySet<CandidatsFormations> _CandidatsFormations;
		
		private EntityRef<Sexes> _Sexes;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnNumeroLicenceChanging(string value);
    partial void OnNumeroLicenceChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSexeIdChanging(System.Nullable<decimal> value);
    partial void OnSexeIdChanged();
    #endregion
		
		public Candidats()
		{
			this._CandidatsFormations = new EntitySet<CandidatsFormations>(new Action<CandidatsFormations>(this.attach_CandidatsFormations), new Action<CandidatsFormations>(this.detach_CandidatsFormations));
			this._Sexes = default(EntityRef<Sexes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="Char(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="Char(50)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroLicence", DbType="Char(20)")]
		public string NumeroLicence
		{
			get
			{
				return this._NumeroLicence;
			}
			set
			{
				if ((this._NumeroLicence != value))
				{
					this.OnNumeroLicenceChanging(value);
					this.SendPropertyChanging();
					this._NumeroLicence = value;
					this.SendPropertyChanged("NumeroLicence");
					this.OnNumeroLicenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="Char(10)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Char(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexeId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SexeId
		{
			get
			{
				return this._SexeId;
			}
			set
			{
				if ((this._SexeId != value))
				{
					if (this._Sexes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSexeIdChanging(value);
					this.SendPropertyChanging();
					this._SexeId = value;
					this.SendPropertyChanged("SexeId");
					this.OnSexeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidats_CandidatsFormations", Storage="_CandidatsFormations", ThisKey="Id", OtherKey="CandidatsId")]
		public EntitySet<CandidatsFormations> CandidatsFormations
		{
			get
			{
				return this._CandidatsFormations;
			}
			set
			{
				this._CandidatsFormations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexes_Candidats", Storage="_Sexes", ThisKey="SexeId", OtherKey="Id", IsForeignKey=true)]
		public Sexes Sexes
		{
			get
			{
				return this._Sexes.Entity;
			}
			set
			{
				Sexes previousValue = this._Sexes.Entity;
				if (((previousValue != value) 
							|| (this._Sexes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sexes.Entity = null;
						previousValue.Candidats.Remove(this);
					}
					this._Sexes.Entity = value;
					if ((value != null))
					{
						value.Candidats.Add(this);
						this._SexeId = value.Id;
					}
					else
					{
						this._SexeId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Sexes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CandidatsFormations(CandidatsFormations entity)
		{
			this.SendPropertyChanging();
			entity.Candidats = this;
		}
		
		private void detach_CandidatsFormations(CandidatsFormations entity)
		{
			this.SendPropertyChanging();
			entity.Candidats = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CandidatsFormations")]
	public partial class CandidatsFormations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private System.Nullable<decimal> _FormationId;
		
		private string _Grade;
		
		private string _StructureAccueil;
		
		private string _DetailsFinancement;
		
		private System.Nullable<decimal> _CoutFormation;
		
		private System.Nullable<decimal> _CandidatsId;
		
		private System.Nullable<decimal> _TuteursId;
		
		private System.Nullable<decimal> _TypedeFinancementsId;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _NumeroLicence;
		
		private string _Telephone;
		
		private string _Email;
		
		private System.Nullable<decimal> _SexeId;
		
		private EntitySet<Resultats> _Resultats;
		
		private EntityRef<Candidats> _Candidats;
		
		private EntityRef<Formations> _Formations;
		
		private EntityRef<Sexes> _Sexes;
		
		private EntityRef<Tuteurs> _Tuteurs;
		
		private EntityRef<TypedeFinancements> _TypedeFinancements;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnFormationIdChanging(System.Nullable<decimal> value);
    partial void OnFormationIdChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnStructureAccueilChanging(string value);
    partial void OnStructureAccueilChanged();
    partial void OnDetailsFinancementChanging(string value);
    partial void OnDetailsFinancementChanged();
    partial void OnCoutFormationChanging(System.Nullable<decimal> value);
    partial void OnCoutFormationChanged();
    partial void OnCandidatsIdChanging(System.Nullable<decimal> value);
    partial void OnCandidatsIdChanged();
    partial void OnTuteursIdChanging(System.Nullable<decimal> value);
    partial void OnTuteursIdChanged();
    partial void OnTypedeFinancementsIdChanging(System.Nullable<decimal> value);
    partial void OnTypedeFinancementsIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnNumeroLicenceChanging(string value);
    partial void OnNumeroLicenceChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSexeIdChanging(System.Nullable<decimal> value);
    partial void OnSexeIdChanged();
    #endregion
		
		public CandidatsFormations()
		{
			this._Resultats = new EntitySet<Resultats>(new Action<Resultats>(this.attach_Resultats), new Action<Resultats>(this.detach_Resultats));
			this._Candidats = default(EntityRef<Candidats>);
			this._Formations = default(EntityRef<Formations>);
			this._Sexes = default(EntityRef<Sexes>);
			this._Tuteurs = default(EntityRef<Tuteurs>);
			this._TypedeFinancements = default(EntityRef<TypedeFinancements>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormationId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> FormationId
		{
			get
			{
				return this._FormationId;
			}
			set
			{
				if ((this._FormationId != value))
				{
					if (this._Formations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormationIdChanging(value);
					this.SendPropertyChanging();
					this._FormationId = value;
					this.SendPropertyChanged("FormationId");
					this.OnFormationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Char(20)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureAccueil", DbType="Char(100)")]
		public string StructureAccueil
		{
			get
			{
				return this._StructureAccueil;
			}
			set
			{
				if ((this._StructureAccueil != value))
				{
					this.OnStructureAccueilChanging(value);
					this.SendPropertyChanging();
					this._StructureAccueil = value;
					this.SendPropertyChanged("StructureAccueil");
					this.OnStructureAccueilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailsFinancement", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DetailsFinancement
		{
			get
			{
				return this._DetailsFinancement;
			}
			set
			{
				if ((this._DetailsFinancement != value))
				{
					this.OnDetailsFinancementChanging(value);
					this.SendPropertyChanging();
					this._DetailsFinancement = value;
					this.SendPropertyChanged("DetailsFinancement");
					this.OnDetailsFinancementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoutFormation", DbType="Money")]
		public System.Nullable<decimal> CoutFormation
		{
			get
			{
				return this._CoutFormation;
			}
			set
			{
				if ((this._CoutFormation != value))
				{
					this.OnCoutFormationChanging(value);
					this.SendPropertyChanging();
					this._CoutFormation = value;
					this.SendPropertyChanged("CoutFormation");
					this.OnCoutFormationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidatsId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CandidatsId
		{
			get
			{
				return this._CandidatsId;
			}
			set
			{
				if ((this._CandidatsId != value))
				{
					if (this._Candidats.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidatsIdChanging(value);
					this.SendPropertyChanging();
					this._CandidatsId = value;
					this.SendPropertyChanged("CandidatsId");
					this.OnCandidatsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TuteursId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TuteursId
		{
			get
			{
				return this._TuteursId;
			}
			set
			{
				if ((this._TuteursId != value))
				{
					if (this._Tuteurs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTuteursIdChanging(value);
					this.SendPropertyChanging();
					this._TuteursId = value;
					this.SendPropertyChanged("TuteursId");
					this.OnTuteursIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypedeFinancementsId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TypedeFinancementsId
		{
			get
			{
				return this._TypedeFinancementsId;
			}
			set
			{
				if ((this._TypedeFinancementsId != value))
				{
					if (this._TypedeFinancements.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypedeFinancementsIdChanging(value);
					this.SendPropertyChanging();
					this._TypedeFinancementsId = value;
					this.SendPropertyChanged("TypedeFinancementsId");
					this.OnTypedeFinancementsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NChar(10)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="NChar(10)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroLicence", DbType="NChar(10)")]
		public string NumeroLicence
		{
			get
			{
				return this._NumeroLicence;
			}
			set
			{
				if ((this._NumeroLicence != value))
				{
					this.OnNumeroLicenceChanging(value);
					this.SendPropertyChanging();
					this._NumeroLicence = value;
					this.SendPropertyChanged("NumeroLicence");
					this.OnNumeroLicenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NChar(10)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(10)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexeId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SexeId
		{
			get
			{
				return this._SexeId;
			}
			set
			{
				if ((this._SexeId != value))
				{
					if (this._Sexes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSexeIdChanging(value);
					this.SendPropertyChanging();
					this._SexeId = value;
					this.SendPropertyChanged("SexeId");
					this.OnSexeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidatsFormations_Resultats", Storage="_Resultats", ThisKey="Id", OtherKey="CandidatFormationId")]
		public EntitySet<Resultats> Resultats
		{
			get
			{
				return this._Resultats;
			}
			set
			{
				this._Resultats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidats_CandidatsFormations", Storage="_Candidats", ThisKey="CandidatsId", OtherKey="Id", IsForeignKey=true)]
		public Candidats Candidats
		{
			get
			{
				return this._Candidats.Entity;
			}
			set
			{
				Candidats previousValue = this._Candidats.Entity;
				if (((previousValue != value) 
							|| (this._Candidats.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Candidats.Entity = null;
						previousValue.CandidatsFormations.Remove(this);
					}
					this._Candidats.Entity = value;
					if ((value != null))
					{
						value.CandidatsFormations.Add(this);
						this._CandidatsId = value.Id;
					}
					else
					{
						this._CandidatsId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Candidats");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Formations_CandidatsFormations", Storage="_Formations", ThisKey="FormationId", OtherKey="Id", IsForeignKey=true)]
		public Formations Formations
		{
			get
			{
				return this._Formations.Entity;
			}
			set
			{
				Formations previousValue = this._Formations.Entity;
				if (((previousValue != value) 
							|| (this._Formations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Formations.Entity = null;
						previousValue.CandidatsFormations.Remove(this);
					}
					this._Formations.Entity = value;
					if ((value != null))
					{
						value.CandidatsFormations.Add(this);
						this._FormationId = value.Id;
					}
					else
					{
						this._FormationId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Formations");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexes_CandidatsFormations", Storage="_Sexes", ThisKey="SexeId", OtherKey="Id", IsForeignKey=true)]
		public Sexes Sexes
		{
			get
			{
				return this._Sexes.Entity;
			}
			set
			{
				Sexes previousValue = this._Sexes.Entity;
				if (((previousValue != value) 
							|| (this._Sexes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sexes.Entity = null;
						previousValue.CandidatsFormations.Remove(this);
					}
					this._Sexes.Entity = value;
					if ((value != null))
					{
						value.CandidatsFormations.Add(this);
						this._SexeId = value.Id;
					}
					else
					{
						this._SexeId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Sexes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tuteurs_CandidatsFormations", Storage="_Tuteurs", ThisKey="TuteursId", OtherKey="Id", IsForeignKey=true)]
		public Tuteurs Tuteurs
		{
			get
			{
				return this._Tuteurs.Entity;
			}
			set
			{
				Tuteurs previousValue = this._Tuteurs.Entity;
				if (((previousValue != value) 
							|| (this._Tuteurs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tuteurs.Entity = null;
						previousValue.CandidatsFormations.Remove(this);
					}
					this._Tuteurs.Entity = value;
					if ((value != null))
					{
						value.CandidatsFormations.Add(this);
						this._TuteursId = value.Id;
					}
					else
					{
						this._TuteursId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Tuteurs");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypedeFinancements_CandidatsFormations", Storage="_TypedeFinancements", ThisKey="TypedeFinancementsId", OtherKey="Id", IsForeignKey=true)]
		public TypedeFinancements TypedeFinancements
		{
			get
			{
				return this._TypedeFinancements.Entity;
			}
			set
			{
				TypedeFinancements previousValue = this._TypedeFinancements.Entity;
				if (((previousValue != value) 
							|| (this._TypedeFinancements.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypedeFinancements.Entity = null;
						previousValue.CandidatsFormations.Remove(this);
					}
					this._TypedeFinancements.Entity = value;
					if ((value != null))
					{
						value.CandidatsFormations.Add(this);
						this._TypedeFinancementsId = value.Id;
					}
					else
					{
						this._TypedeFinancementsId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("TypedeFinancements");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resultats(Resultats entity)
		{
			this.SendPropertyChanging();
			entity.CandidatsFormations = this;
		}
		
		private void detach_Resultats(Resultats entity)
		{
			this.SendPropertyChanging();
			entity.CandidatsFormations = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Formations")]
	public partial class Formations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private System.Nullable<bool> _LiguePorteuse;
		
		private System.Nullable<bool> _LigueSousTraite;
		
		private System.Nullable<System.DateTime> _DateDebut;
		
		private System.Nullable<System.DateTime> _DateFin;
		
		private System.Nullable<System.DateTime> _DateLimteInscription;
		
		private System.Nullable<System.DateTime> _DateTestSelection;
		
		private System.Nullable<decimal> _NombreTotalHeures;
		
		private System.Nullable<decimal> _NbreHeureCentre;
		
		private System.Nullable<decimal> _NbrHeureStructAccueil;
		
		private System.Nullable<decimal> _TotalHeureFOAD;
		
		private System.Nullable<decimal> _HeureELearning;
		
		private System.Nullable<decimal> _TotalAutresHeures;
		
		private string _TypeHeureContenu;
		
		private System.Nullable<decimal> _CoutComplet;
		
		private string _InfoComplementaires;
		
		private System.Nullable<decimal> _HabilitationsId;
		
		private System.Nullable<decimal> _PorteursId;
		
		private System.Nullable<decimal> _TypedeFormationsId;
		
		private string _NumeroSession;
		
		private System.Nullable<decimal> _IdOrganisateurpeda;
		
		private System.Nullable<decimal> _NbreHeureAutreEspace;
		
		private System.Nullable<decimal> _OrganismeId;
		
		private string _Prestataire;
		
		private EntitySet<CandidatsFormations> _CandidatsFormations;
		
		private EntitySet<FormationsLieux> _FormationsLieux;
		
		private EntitySet<Lieux> _Lieux;
		
		private EntityRef<Habilitations> _Habilitations;
		
		private EntityRef<Organismes> _Organismes;
		
		private EntityRef<Personnel> _Personnel;
		
		private EntityRef<Porteurs> _Porteurs;
		
		private EntityRef<TypedeFormations> _TypedeFormations;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnLiguePorteuseChanging(System.Nullable<bool> value);
    partial void OnLiguePorteuseChanged();
    partial void OnLigueSousTraiteChanging(System.Nullable<bool> value);
    partial void OnLigueSousTraiteChanged();
    partial void OnDateDebutChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDebutChanged();
    partial void OnDateFinChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFinChanged();
    partial void OnDateLimteInscriptionChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLimteInscriptionChanged();
    partial void OnDateTestSelectionChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTestSelectionChanged();
    partial void OnNombreTotalHeuresChanging(System.Nullable<decimal> value);
    partial void OnNombreTotalHeuresChanged();
    partial void OnNbreHeureCentreChanging(System.Nullable<decimal> value);
    partial void OnNbreHeureCentreChanged();
    partial void OnNbrHeureStructAccueilChanging(System.Nullable<decimal> value);
    partial void OnNbrHeureStructAccueilChanged();
    partial void OnTotalHeureFOADChanging(System.Nullable<decimal> value);
    partial void OnTotalHeureFOADChanged();
    partial void OnHeureELearningChanging(System.Nullable<decimal> value);
    partial void OnHeureELearningChanged();
    partial void OnTotalAutresHeuresChanging(System.Nullable<decimal> value);
    partial void OnTotalAutresHeuresChanged();
    partial void OnTypeHeureContenuChanging(string value);
    partial void OnTypeHeureContenuChanged();
    partial void OnCoutCompletChanging(System.Nullable<decimal> value);
    partial void OnCoutCompletChanged();
    partial void OnInfoComplementairesChanging(string value);
    partial void OnInfoComplementairesChanged();
    partial void OnHabilitationsIdChanging(System.Nullable<decimal> value);
    partial void OnHabilitationsIdChanged();
    partial void OnPorteursIdChanging(System.Nullable<decimal> value);
    partial void OnPorteursIdChanged();
    partial void OnTypedeFormationsIdChanging(System.Nullable<decimal> value);
    partial void OnTypedeFormationsIdChanged();
    partial void OnNumeroSessionChanging(string value);
    partial void OnNumeroSessionChanged();
    partial void OnIdOrganisateurpedaChanging(System.Nullable<decimal> value);
    partial void OnIdOrganisateurpedaChanged();
    partial void OnNbreHeureAutreEspaceChanging(System.Nullable<decimal> value);
    partial void OnNbreHeureAutreEspaceChanged();
    partial void OnOrganismeIdChanging(System.Nullable<decimal> value);
    partial void OnOrganismeIdChanged();
    partial void OnPrestataireChanging(string value);
    partial void OnPrestataireChanged();
    #endregion
		
		public Formations()
		{
			this._CandidatsFormations = new EntitySet<CandidatsFormations>(new Action<CandidatsFormations>(this.attach_CandidatsFormations), new Action<CandidatsFormations>(this.detach_CandidatsFormations));
			this._FormationsLieux = new EntitySet<FormationsLieux>(new Action<FormationsLieux>(this.attach_FormationsLieux), new Action<FormationsLieux>(this.detach_FormationsLieux));
			this._Lieux = new EntitySet<Lieux>(new Action<Lieux>(this.attach_Lieux), new Action<Lieux>(this.detach_Lieux));
			this._Habilitations = default(EntityRef<Habilitations>);
			this._Organismes = default(EntityRef<Organismes>);
			this._Personnel = default(EntityRef<Personnel>);
			this._Porteurs = default(EntityRef<Porteurs>);
			this._TypedeFormations = default(EntityRef<TypedeFormations>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiguePorteuse", DbType="Bit")]
		public System.Nullable<bool> LiguePorteuse
		{
			get
			{
				return this._LiguePorteuse;
			}
			set
			{
				if ((this._LiguePorteuse != value))
				{
					this.OnLiguePorteuseChanging(value);
					this.SendPropertyChanging();
					this._LiguePorteuse = value;
					this.SendPropertyChanged("LiguePorteuse");
					this.OnLiguePorteuseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LigueSousTraite", DbType="Bit")]
		public System.Nullable<bool> LigueSousTraite
		{
			get
			{
				return this._LigueSousTraite;
			}
			set
			{
				if ((this._LigueSousTraite != value))
				{
					this.OnLigueSousTraiteChanging(value);
					this.SendPropertyChanging();
					this._LigueSousTraite = value;
					this.SendPropertyChanged("LigueSousTraite");
					this.OnLigueSousTraiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebut", DbType="Date")]
		public System.Nullable<System.DateTime> DateDebut
		{
			get
			{
				return this._DateDebut;
			}
			set
			{
				if ((this._DateDebut != value))
				{
					this.OnDateDebutChanging(value);
					this.SendPropertyChanging();
					this._DateDebut = value;
					this.SendPropertyChanged("DateDebut");
					this.OnDateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFin", DbType="Date")]
		public System.Nullable<System.DateTime> DateFin
		{
			get
			{
				return this._DateFin;
			}
			set
			{
				if ((this._DateFin != value))
				{
					this.OnDateFinChanging(value);
					this.SendPropertyChanging();
					this._DateFin = value;
					this.SendPropertyChanged("DateFin");
					this.OnDateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLimteInscription", DbType="Date")]
		public System.Nullable<System.DateTime> DateLimteInscription
		{
			get
			{
				return this._DateLimteInscription;
			}
			set
			{
				if ((this._DateLimteInscription != value))
				{
					this.OnDateLimteInscriptionChanging(value);
					this.SendPropertyChanging();
					this._DateLimteInscription = value;
					this.SendPropertyChanged("DateLimteInscription");
					this.OnDateLimteInscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTestSelection", DbType="Date")]
		public System.Nullable<System.DateTime> DateTestSelection
		{
			get
			{
				return this._DateTestSelection;
			}
			set
			{
				if ((this._DateTestSelection != value))
				{
					this.OnDateTestSelectionChanging(value);
					this.SendPropertyChanging();
					this._DateTestSelection = value;
					this.SendPropertyChanged("DateTestSelection");
					this.OnDateTestSelectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreTotalHeures", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> NombreTotalHeures
		{
			get
			{
				return this._NombreTotalHeures;
			}
			set
			{
				if ((this._NombreTotalHeures != value))
				{
					this.OnNombreTotalHeuresChanging(value);
					this.SendPropertyChanging();
					this._NombreTotalHeures = value;
					this.SendPropertyChanged("NombreTotalHeures");
					this.OnNombreTotalHeuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbreHeureCentre", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> NbreHeureCentre
		{
			get
			{
				return this._NbreHeureCentre;
			}
			set
			{
				if ((this._NbreHeureCentre != value))
				{
					this.OnNbreHeureCentreChanging(value);
					this.SendPropertyChanging();
					this._NbreHeureCentre = value;
					this.SendPropertyChanged("NbreHeureCentre");
					this.OnNbreHeureCentreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbrHeureStructAccueil", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> NbrHeureStructAccueil
		{
			get
			{
				return this._NbrHeureStructAccueil;
			}
			set
			{
				if ((this._NbrHeureStructAccueil != value))
				{
					this.OnNbrHeureStructAccueilChanging(value);
					this.SendPropertyChanging();
					this._NbrHeureStructAccueil = value;
					this.SendPropertyChanged("NbrHeureStructAccueil");
					this.OnNbrHeureStructAccueilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalHeureFOAD", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalHeureFOAD
		{
			get
			{
				return this._TotalHeureFOAD;
			}
			set
			{
				if ((this._TotalHeureFOAD != value))
				{
					this.OnTotalHeureFOADChanging(value);
					this.SendPropertyChanging();
					this._TotalHeureFOAD = value;
					this.SendPropertyChanged("TotalHeureFOAD");
					this.OnTotalHeureFOADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeureELearning", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> HeureELearning
		{
			get
			{
				return this._HeureELearning;
			}
			set
			{
				if ((this._HeureELearning != value))
				{
					this.OnHeureELearningChanging(value);
					this.SendPropertyChanging();
					this._HeureELearning = value;
					this.SendPropertyChanged("HeureELearning");
					this.OnHeureELearningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAutresHeures", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalAutresHeures
		{
			get
			{
				return this._TotalAutresHeures;
			}
			set
			{
				if ((this._TotalAutresHeures != value))
				{
					this.OnTotalAutresHeuresChanging(value);
					this.SendPropertyChanging();
					this._TotalAutresHeures = value;
					this.SendPropertyChanged("TotalAutresHeures");
					this.OnTotalAutresHeuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeHeureContenu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TypeHeureContenu
		{
			get
			{
				return this._TypeHeureContenu;
			}
			set
			{
				if ((this._TypeHeureContenu != value))
				{
					this.OnTypeHeureContenuChanging(value);
					this.SendPropertyChanging();
					this._TypeHeureContenu = value;
					this.SendPropertyChanged("TypeHeureContenu");
					this.OnTypeHeureContenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoutComplet", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CoutComplet
		{
			get
			{
				return this._CoutComplet;
			}
			set
			{
				if ((this._CoutComplet != value))
				{
					this.OnCoutCompletChanging(value);
					this.SendPropertyChanging();
					this._CoutComplet = value;
					this.SendPropertyChanged("CoutComplet");
					this.OnCoutCompletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoComplementaires", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string InfoComplementaires
		{
			get
			{
				return this._InfoComplementaires;
			}
			set
			{
				if ((this._InfoComplementaires != value))
				{
					this.OnInfoComplementairesChanging(value);
					this.SendPropertyChanging();
					this._InfoComplementaires = value;
					this.SendPropertyChanged("InfoComplementaires");
					this.OnInfoComplementairesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HabilitationsId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> HabilitationsId
		{
			get
			{
				return this._HabilitationsId;
			}
			set
			{
				if ((this._HabilitationsId != value))
				{
					if (this._Habilitations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHabilitationsIdChanging(value);
					this.SendPropertyChanging();
					this._HabilitationsId = value;
					this.SendPropertyChanged("HabilitationsId");
					this.OnHabilitationsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PorteursId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PorteursId
		{
			get
			{
				return this._PorteursId;
			}
			set
			{
				if ((this._PorteursId != value))
				{
					if (this._Porteurs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPorteursIdChanging(value);
					this.SendPropertyChanging();
					this._PorteursId = value;
					this.SendPropertyChanged("PorteursId");
					this.OnPorteursIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypedeFormationsId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TypedeFormationsId
		{
			get
			{
				return this._TypedeFormationsId;
			}
			set
			{
				if ((this._TypedeFormationsId != value))
				{
					if (this._TypedeFormations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypedeFormationsIdChanging(value);
					this.SendPropertyChanging();
					this._TypedeFormationsId = value;
					this.SendPropertyChanged("TypedeFormationsId");
					this.OnTypedeFormationsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroSession", DbType="VarChar(50)")]
		public string NumeroSession
		{
			get
			{
				return this._NumeroSession;
			}
			set
			{
				if ((this._NumeroSession != value))
				{
					this.OnNumeroSessionChanging(value);
					this.SendPropertyChanging();
					this._NumeroSession = value;
					this.SendPropertyChanged("NumeroSession");
					this.OnNumeroSessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOrganisateurpeda", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> IdOrganisateurpeda
		{
			get
			{
				return this._IdOrganisateurpeda;
			}
			set
			{
				if ((this._IdOrganisateurpeda != value))
				{
					if (this._Personnel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdOrganisateurpedaChanging(value);
					this.SendPropertyChanging();
					this._IdOrganisateurpeda = value;
					this.SendPropertyChanged("IdOrganisateurpeda");
					this.OnIdOrganisateurpedaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbreHeureAutreEspace", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> NbreHeureAutreEspace
		{
			get
			{
				return this._NbreHeureAutreEspace;
			}
			set
			{
				if ((this._NbreHeureAutreEspace != value))
				{
					this.OnNbreHeureAutreEspaceChanging(value);
					this.SendPropertyChanging();
					this._NbreHeureAutreEspace = value;
					this.SendPropertyChanged("NbreHeureAutreEspace");
					this.OnNbreHeureAutreEspaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganismeId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> OrganismeId
		{
			get
			{
				return this._OrganismeId;
			}
			set
			{
				if ((this._OrganismeId != value))
				{
					if (this._Organismes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganismeIdChanging(value);
					this.SendPropertyChanging();
					this._OrganismeId = value;
					this.SendPropertyChanged("OrganismeId");
					this.OnOrganismeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prestataire", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Prestataire
		{
			get
			{
				return this._Prestataire;
			}
			set
			{
				if ((this._Prestataire != value))
				{
					this.OnPrestataireChanging(value);
					this.SendPropertyChanging();
					this._Prestataire = value;
					this.SendPropertyChanged("Prestataire");
					this.OnPrestataireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Formations_CandidatsFormations", Storage="_CandidatsFormations", ThisKey="Id", OtherKey="FormationId")]
		public EntitySet<CandidatsFormations> CandidatsFormations
		{
			get
			{
				return this._CandidatsFormations;
			}
			set
			{
				this._CandidatsFormations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Formations_FormationsLieux", Storage="_FormationsLieux", ThisKey="Id", OtherKey="IdFormation")]
		public EntitySet<FormationsLieux> FormationsLieux
		{
			get
			{
				return this._FormationsLieux;
			}
			set
			{
				this._FormationsLieux.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Formations_Lieux", Storage="_Lieux", ThisKey="Id", OtherKey="LieuFormationId")]
		public EntitySet<Lieux> Lieux
		{
			get
			{
				return this._Lieux;
			}
			set
			{
				this._Lieux.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Habilitations_Formations", Storage="_Habilitations", ThisKey="HabilitationsId", OtherKey="Id", IsForeignKey=true)]
		public Habilitations Habilitations
		{
			get
			{
				return this._Habilitations.Entity;
			}
			set
			{
				Habilitations previousValue = this._Habilitations.Entity;
				if (((previousValue != value) 
							|| (this._Habilitations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Habilitations.Entity = null;
						previousValue.Formations.Remove(this);
					}
					this._Habilitations.Entity = value;
					if ((value != null))
					{
						value.Formations.Add(this);
						this._HabilitationsId = value.Id;
					}
					else
					{
						this._HabilitationsId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Habilitations");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organismes_Formations", Storage="_Organismes", ThisKey="OrganismeId", OtherKey="Id", IsForeignKey=true)]
		public Organismes Organismes
		{
			get
			{
				return this._Organismes.Entity;
			}
			set
			{
				Organismes previousValue = this._Organismes.Entity;
				if (((previousValue != value) 
							|| (this._Organismes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organismes.Entity = null;
						previousValue.Formations.Remove(this);
					}
					this._Organismes.Entity = value;
					if ((value != null))
					{
						value.Formations.Add(this);
						this._OrganismeId = value.Id;
					}
					else
					{
						this._OrganismeId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Organismes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Formations", Storage="_Personnel", ThisKey="IdOrganisateurpeda", OtherKey="Id", IsForeignKey=true)]
		public Personnel Personnel
		{
			get
			{
				return this._Personnel.Entity;
			}
			set
			{
				Personnel previousValue = this._Personnel.Entity;
				if (((previousValue != value) 
							|| (this._Personnel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personnel.Entity = null;
						previousValue.Formations.Remove(this);
					}
					this._Personnel.Entity = value;
					if ((value != null))
					{
						value.Formations.Add(this);
						this._IdOrganisateurpeda = value.Id;
					}
					else
					{
						this._IdOrganisateurpeda = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Personnel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Porteurs_Formations", Storage="_Porteurs", ThisKey="PorteursId", OtherKey="Id", IsForeignKey=true)]
		public Porteurs Porteurs
		{
			get
			{
				return this._Porteurs.Entity;
			}
			set
			{
				Porteurs previousValue = this._Porteurs.Entity;
				if (((previousValue != value) 
							|| (this._Porteurs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Porteurs.Entity = null;
						previousValue.Formations.Remove(this);
					}
					this._Porteurs.Entity = value;
					if ((value != null))
					{
						value.Formations.Add(this);
						this._PorteursId = value.Id;
					}
					else
					{
						this._PorteursId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Porteurs");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypedeFormations_Formations", Storage="_TypedeFormations", ThisKey="TypedeFormationsId", OtherKey="Id", IsForeignKey=true)]
		public TypedeFormations TypedeFormations
		{
			get
			{
				return this._TypedeFormations.Entity;
			}
			set
			{
				TypedeFormations previousValue = this._TypedeFormations.Entity;
				if (((previousValue != value) 
							|| (this._TypedeFormations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypedeFormations.Entity = null;
						previousValue.Formations.Remove(this);
					}
					this._TypedeFormations.Entity = value;
					if ((value != null))
					{
						value.Formations.Add(this);
						this._TypedeFormationsId = value.Id;
					}
					else
					{
						this._TypedeFormationsId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("TypedeFormations");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CandidatsFormations(CandidatsFormations entity)
		{
			this.SendPropertyChanging();
			entity.Formations = this;
		}
		
		private void detach_CandidatsFormations(CandidatsFormations entity)
		{
			this.SendPropertyChanging();
			entity.Formations = null;
		}
		
		private void attach_FormationsLieux(FormationsLieux entity)
		{
			this.SendPropertyChanging();
			entity.Formations = this;
		}
		
		private void detach_FormationsLieux(FormationsLieux entity)
		{
			this.SendPropertyChanging();
			entity.Formations = null;
		}
		
		private void attach_Lieux(Lieux entity)
		{
			this.SendPropertyChanging();
			entity.Formations = this;
		}
		
		private void detach_Lieux(Lieux entity)
		{
			this.SendPropertyChanging();
			entity.Formations = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormationsLieux")]
	public partial class FormationsLieux : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private System.Nullable<decimal> _IdFormation;
		
		private System.Nullable<decimal> _IdLieu;
		
		private EntityRef<Formations> _Formations;
		
		private EntityRef<Lieux> _Lieux;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnIdFormationChanging(System.Nullable<decimal> value);
    partial void OnIdFormationChanged();
    partial void OnIdLieuChanging(System.Nullable<decimal> value);
    partial void OnIdLieuChanged();
    #endregion
		
		public FormationsLieux()
		{
			this._Formations = default(EntityRef<Formations>);
			this._Lieux = default(EntityRef<Lieux>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFormation", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> IdFormation
		{
			get
			{
				return this._IdFormation;
			}
			set
			{
				if ((this._IdFormation != value))
				{
					if (this._Formations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFormationChanging(value);
					this.SendPropertyChanging();
					this._IdFormation = value;
					this.SendPropertyChanged("IdFormation");
					this.OnIdFormationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLieu", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> IdLieu
		{
			get
			{
				return this._IdLieu;
			}
			set
			{
				if ((this._IdLieu != value))
				{
					if (this._Lieux.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLieuChanging(value);
					this.SendPropertyChanging();
					this._IdLieu = value;
					this.SendPropertyChanged("IdLieu");
					this.OnIdLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Formations_FormationsLieux", Storage="_Formations", ThisKey="IdFormation", OtherKey="Id", IsForeignKey=true)]
		public Formations Formations
		{
			get
			{
				return this._Formations.Entity;
			}
			set
			{
				Formations previousValue = this._Formations.Entity;
				if (((previousValue != value) 
							|| (this._Formations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Formations.Entity = null;
						previousValue.FormationsLieux.Remove(this);
					}
					this._Formations.Entity = value;
					if ((value != null))
					{
						value.FormationsLieux.Add(this);
						this._IdFormation = value.Id;
					}
					else
					{
						this._IdFormation = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Formations");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lieux_FormationsLieux", Storage="_Lieux", ThisKey="IdLieu", OtherKey="Id", IsForeignKey=true)]
		public Lieux Lieux
		{
			get
			{
				return this._Lieux.Entity;
			}
			set
			{
				Lieux previousValue = this._Lieux.Entity;
				if (((previousValue != value) 
							|| (this._Lieux.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lieux.Entity = null;
						previousValue.FormationsLieux.Remove(this);
					}
					this._Lieux.Entity = value;
					if ((value != null))
					{
						value.FormationsLieux.Add(this);
						this._IdLieu = value.Id;
					}
					else
					{
						this._IdLieu = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Lieux");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Habilitations")]
	public partial class Habilitations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _NumeroHabilitation;
		
		private System.Nullable<System.DateTime> _DebutDateDelivrance;
		
		private System.Nullable<System.DateTime> _FinDateDelivrance;
		
		private string _NumeroDelivrance;
		
		private string _NumeroSession;
		
		private System.Nullable<System.DateTime> _DateEPMSP;
		
		private System.Nullable<System.DateTime> _DateTEP;
		
		private EntitySet<Formations> _Formations;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnNumeroHabilitationChanging(string value);
    partial void OnNumeroHabilitationChanged();
    partial void OnDebutDateDelivranceChanging(System.Nullable<System.DateTime> value);
    partial void OnDebutDateDelivranceChanged();
    partial void OnFinDateDelivranceChanging(System.Nullable<System.DateTime> value);
    partial void OnFinDateDelivranceChanged();
    partial void OnNumeroDelivranceChanging(string value);
    partial void OnNumeroDelivranceChanged();
    partial void OnNumeroSessionChanging(string value);
    partial void OnNumeroSessionChanged();
    partial void OnDateEPMSPChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEPMSPChanged();
    partial void OnDateTEPChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTEPChanged();
    #endregion
		
		public Habilitations()
		{
			this._Formations = new EntitySet<Formations>(new Action<Formations>(this.attach_Formations), new Action<Formations>(this.detach_Formations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroHabilitation", DbType="Char(50)")]
		public string NumeroHabilitation
		{
			get
			{
				return this._NumeroHabilitation;
			}
			set
			{
				if ((this._NumeroHabilitation != value))
				{
					this.OnNumeroHabilitationChanging(value);
					this.SendPropertyChanging();
					this._NumeroHabilitation = value;
					this.SendPropertyChanged("NumeroHabilitation");
					this.OnNumeroHabilitationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebutDateDelivrance", DbType="Date")]
		public System.Nullable<System.DateTime> DebutDateDelivrance
		{
			get
			{
				return this._DebutDateDelivrance;
			}
			set
			{
				if ((this._DebutDateDelivrance != value))
				{
					this.OnDebutDateDelivranceChanging(value);
					this.SendPropertyChanging();
					this._DebutDateDelivrance = value;
					this.SendPropertyChanged("DebutDateDelivrance");
					this.OnDebutDateDelivranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinDateDelivrance", DbType="Date")]
		public System.Nullable<System.DateTime> FinDateDelivrance
		{
			get
			{
				return this._FinDateDelivrance;
			}
			set
			{
				if ((this._FinDateDelivrance != value))
				{
					this.OnFinDateDelivranceChanging(value);
					this.SendPropertyChanging();
					this._FinDateDelivrance = value;
					this.SendPropertyChanged("FinDateDelivrance");
					this.OnFinDateDelivranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroDelivrance", DbType="Char(50)")]
		public string NumeroDelivrance
		{
			get
			{
				return this._NumeroDelivrance;
			}
			set
			{
				if ((this._NumeroDelivrance != value))
				{
					this.OnNumeroDelivranceChanging(value);
					this.SendPropertyChanging();
					this._NumeroDelivrance = value;
					this.SendPropertyChanged("NumeroDelivrance");
					this.OnNumeroDelivranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroSession", DbType="Char(50)")]
		public string NumeroSession
		{
			get
			{
				return this._NumeroSession;
			}
			set
			{
				if ((this._NumeroSession != value))
				{
					this.OnNumeroSessionChanging(value);
					this.SendPropertyChanging();
					this._NumeroSession = value;
					this.SendPropertyChanged("NumeroSession");
					this.OnNumeroSessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEPMSP", DbType="Date")]
		public System.Nullable<System.DateTime> DateEPMSP
		{
			get
			{
				return this._DateEPMSP;
			}
			set
			{
				if ((this._DateEPMSP != value))
				{
					this.OnDateEPMSPChanging(value);
					this.SendPropertyChanging();
					this._DateEPMSP = value;
					this.SendPropertyChanged("DateEPMSP");
					this.OnDateEPMSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTEP", DbType="Date")]
		public System.Nullable<System.DateTime> DateTEP
		{
			get
			{
				return this._DateTEP;
			}
			set
			{
				if ((this._DateTEP != value))
				{
					this.OnDateTEPChanging(value);
					this.SendPropertyChanging();
					this._DateTEP = value;
					this.SendPropertyChanged("DateTEP");
					this.OnDateTEPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Habilitations_Formations", Storage="_Formations", ThisKey="Id", OtherKey="HabilitationsId")]
		public EntitySet<Formations> Formations
		{
			get
			{
				return this._Formations;
			}
			set
			{
				this._Formations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Formations(Formations entity)
		{
			this.SendPropertyChanging();
			entity.Habilitations = this;
		}
		
		private void detach_Formations(Formations entity)
		{
			this.SendPropertyChanging();
			entity.Habilitations = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lieux")]
	public partial class Lieux : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Adresse;
		
		private string _CodePostal;
		
		private string _Ville;
		
		private string _Telephone;
		
		private string _Email;
		
		private System.Nullable<decimal> _LieuFormationId;
		
		private EntitySet<FormationsLieux> _FormationsLieux;
		
		private EntitySet<Organismes> _Organismes;
		
		private EntitySet<Porteurs> _Porteurs;
		
		private EntitySet<Prestataires> _Prestataires;
		
		private EntityRef<Formations> _Formations;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnCodePostalChanging(string value);
    partial void OnCodePostalChanged();
    partial void OnVilleChanging(string value);
    partial void OnVilleChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLieuFormationIdChanging(System.Nullable<decimal> value);
    partial void OnLieuFormationIdChanged();
    #endregion
		
		public Lieux()
		{
			this._FormationsLieux = new EntitySet<FormationsLieux>(new Action<FormationsLieux>(this.attach_FormationsLieux), new Action<FormationsLieux>(this.detach_FormationsLieux));
			this._Organismes = new EntitySet<Organismes>(new Action<Organismes>(this.attach_Organismes), new Action<Organismes>(this.detach_Organismes));
			this._Porteurs = new EntitySet<Porteurs>(new Action<Porteurs>(this.attach_Porteurs), new Action<Porteurs>(this.detach_Porteurs));
			this._Prestataires = new EntitySet<Prestataires>(new Action<Prestataires>(this.attach_Prestataires), new Action<Prestataires>(this.detach_Prestataires));
			this._Formations = default(EntityRef<Formations>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="Char(100)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodePostal", DbType="NChar(5)")]
		public string CodePostal
		{
			get
			{
				return this._CodePostal;
			}
			set
			{
				if ((this._CodePostal != value))
				{
					this.OnCodePostalChanging(value);
					this.SendPropertyChanging();
					this._CodePostal = value;
					this.SendPropertyChanged("CodePostal");
					this.OnCodePostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ville", DbType="Char(100)")]
		public string Ville
		{
			get
			{
				return this._Ville;
			}
			set
			{
				if ((this._Ville != value))
				{
					this.OnVilleChanging(value);
					this.SendPropertyChanging();
					this._Ville = value;
					this.SendPropertyChanged("Ville");
					this.OnVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="Char(10)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Char(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LieuFormationId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LieuFormationId
		{
			get
			{
				return this._LieuFormationId;
			}
			set
			{
				if ((this._LieuFormationId != value))
				{
					if (this._Formations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLieuFormationIdChanging(value);
					this.SendPropertyChanging();
					this._LieuFormationId = value;
					this.SendPropertyChanged("LieuFormationId");
					this.OnLieuFormationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lieux_FormationsLieux", Storage="_FormationsLieux", ThisKey="Id", OtherKey="IdLieu")]
		public EntitySet<FormationsLieux> FormationsLieux
		{
			get
			{
				return this._FormationsLieux;
			}
			set
			{
				this._FormationsLieux.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lieux_Organismes", Storage="_Organismes", ThisKey="Id", OtherKey="LieuxId")]
		public EntitySet<Organismes> Organismes
		{
			get
			{
				return this._Organismes;
			}
			set
			{
				this._Organismes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lieux_Porteurs", Storage="_Porteurs", ThisKey="Id", OtherKey="LieuxId")]
		public EntitySet<Porteurs> Porteurs
		{
			get
			{
				return this._Porteurs;
			}
			set
			{
				this._Porteurs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lieux_Prestataires", Storage="_Prestataires", ThisKey="Id", OtherKey="LieuxId")]
		public EntitySet<Prestataires> Prestataires
		{
			get
			{
				return this._Prestataires;
			}
			set
			{
				this._Prestataires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Formations_Lieux", Storage="_Formations", ThisKey="LieuFormationId", OtherKey="Id", IsForeignKey=true)]
		public Formations Formations
		{
			get
			{
				return this._Formations.Entity;
			}
			set
			{
				Formations previousValue = this._Formations.Entity;
				if (((previousValue != value) 
							|| (this._Formations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Formations.Entity = null;
						previousValue.Lieux.Remove(this);
					}
					this._Formations.Entity = value;
					if ((value != null))
					{
						value.Lieux.Add(this);
						this._LieuFormationId = value.Id;
					}
					else
					{
						this._LieuFormationId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Formations");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FormationsLieux(FormationsLieux entity)
		{
			this.SendPropertyChanging();
			entity.Lieux = this;
		}
		
		private void detach_FormationsLieux(FormationsLieux entity)
		{
			this.SendPropertyChanging();
			entity.Lieux = null;
		}
		
		private void attach_Organismes(Organismes entity)
		{
			this.SendPropertyChanging();
			entity.Lieux = this;
		}
		
		private void detach_Organismes(Organismes entity)
		{
			this.SendPropertyChanging();
			entity.Lieux = null;
		}
		
		private void attach_Porteurs(Porteurs entity)
		{
			this.SendPropertyChanging();
			entity.Lieux = this;
		}
		
		private void detach_Porteurs(Porteurs entity)
		{
			this.SendPropertyChanging();
			entity.Lieux = null;
		}
		
		private void attach_Prestataires(Prestataires entity)
		{
			this.SendPropertyChanging();
			entity.Lieux = this;
		}
		
		private void detach_Prestataires(Prestataires entity)
		{
			this.SendPropertyChanging();
			entity.Lieux = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ligues")]
	public partial class Ligues : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Libelle;
		
		private System.Nullable<double> _CodeLigue;
		
		private EntitySet<UtilisateursLiguesDroits> _UtilisateursLiguesDroits;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnLibelleChanging(string value);
    partial void OnLibelleChanged();
    partial void OnCodeLigueChanging(System.Nullable<double> value);
    partial void OnCodeLigueChanged();
    #endregion
		
		public Ligues()
		{
			this._UtilisateursLiguesDroits = new EntitySet<UtilisateursLiguesDroits>(new Action<UtilisateursLiguesDroits>(this.attach_UtilisateursLiguesDroits), new Action<UtilisateursLiguesDroits>(this.detach_UtilisateursLiguesDroits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Libelle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Libelle
		{
			get
			{
				return this._Libelle;
			}
			set
			{
				if ((this._Libelle != value))
				{
					this.OnLibelleChanging(value);
					this.SendPropertyChanging();
					this._Libelle = value;
					this.SendPropertyChanged("Libelle");
					this.OnLibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeLigue", DbType="Float")]
		public System.Nullable<double> CodeLigue
		{
			get
			{
				return this._CodeLigue;
			}
			set
			{
				if ((this._CodeLigue != value))
				{
					this.OnCodeLigueChanging(value);
					this.SendPropertyChanging();
					this._CodeLigue = value;
					this.SendPropertyChanged("CodeLigue");
					this.OnCodeLigueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ligues_UtilisateursLiguesDroits", Storage="_UtilisateursLiguesDroits", ThisKey="Id", OtherKey="IdLigue")]
		public EntitySet<UtilisateursLiguesDroits> UtilisateursLiguesDroits
		{
			get
			{
				return this._UtilisateursLiguesDroits;
			}
			set
			{
				this._UtilisateursLiguesDroits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UtilisateursLiguesDroits(UtilisateursLiguesDroits entity)
		{
			this.SendPropertyChanging();
			entity.Ligues = this;
		}
		
		private void detach_UtilisateursLiguesDroits(UtilisateursLiguesDroits entity)
		{
			this.SendPropertyChanging();
			entity.Ligues = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisateurs")]
	public partial class Organisateurs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _Fonction;
		
		private string _Telephone;
		
		private string _Email;
		
		private string _Qualite;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnFonctionChanging(string value);
    partial void OnFonctionChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnQualiteChanging(string value);
    partial void OnQualiteChanged();
    #endregion
		
		public Organisateurs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fonction", DbType="Char(50)")]
		public string Fonction
		{
			get
			{
				return this._Fonction;
			}
			set
			{
				if ((this._Fonction != value))
				{
					this.OnFonctionChanging(value);
					this.SendPropertyChanging();
					this._Fonction = value;
					this.SendPropertyChanged("Fonction");
					this.OnFonctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Char(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qualite", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Qualite
		{
			get
			{
				return this._Qualite;
			}
			set
			{
				if ((this._Qualite != value))
				{
					this.OnQualiteChanging(value);
					this.SendPropertyChanging();
					this._Qualite = value;
					this.SendPropertyChanged("Qualite");
					this.OnQualiteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisations")]
	public partial class Organisations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private System.Nullable<decimal> _IdOrganisme;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnIdOrganismeChanging(System.Nullable<decimal> value);
    partial void OnIdOrganismeChanged();
    #endregion
		
		public Organisations()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOrganisme", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> IdOrganisme
		{
			get
			{
				return this._IdOrganisme;
			}
			set
			{
				if ((this._IdOrganisme != value))
				{
					this.OnIdOrganismeChanging(value);
					this.SendPropertyChanging();
					this._IdOrganisme = value;
					this.SendPropertyChanged("IdOrganisme");
					this.OnIdOrganismeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organismes")]
	public partial class Organismes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Ligue;
		
		private string _Libelle;
		
		private string _NumeroDeclaration;
		
		private string _AnneeDeclaration;
		
		private System.Nullable<decimal> _LieuxId;
		
		private System.Nullable<decimal> _PresidentId;
		
		private System.Nullable<decimal> _CoordinateurId;
		
		private System.Nullable<decimal> _DirecteurId;
		
		private System.Nullable<decimal> _ResponsableId;
		
		private EntitySet<Formations> _Formations;
		
		private EntityRef<Lieux> _Lieux;
		
		private EntityRef<Personnel> _Personnel;
		
		private EntityRef<Personnel> _Personnel1;
		
		private EntityRef<PresidentOrganisme> _PresidentOrganisme;
		
		private EntityRef<Responsable> _Responsable;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnLigueChanging(string value);
    partial void OnLigueChanged();
    partial void OnLibelleChanging(string value);
    partial void OnLibelleChanged();
    partial void OnNumeroDeclarationChanging(string value);
    partial void OnNumeroDeclarationChanged();
    partial void OnAnneeDeclarationChanging(string value);
    partial void OnAnneeDeclarationChanged();
    partial void OnLieuxIdChanging(System.Nullable<decimal> value);
    partial void OnLieuxIdChanged();
    partial void OnPresidentIdChanging(System.Nullable<decimal> value);
    partial void OnPresidentIdChanged();
    partial void OnCoordinateurIdChanging(System.Nullable<decimal> value);
    partial void OnCoordinateurIdChanged();
    partial void OnDirecteurIdChanging(System.Nullable<decimal> value);
    partial void OnDirecteurIdChanged();
    partial void OnResponsableIdChanging(System.Nullable<decimal> value);
    partial void OnResponsableIdChanged();
    #endregion
		
		public Organismes()
		{
			this._Formations = new EntitySet<Formations>(new Action<Formations>(this.attach_Formations), new Action<Formations>(this.detach_Formations));
			this._Lieux = default(EntityRef<Lieux>);
			this._Personnel = default(EntityRef<Personnel>);
			this._Personnel1 = default(EntityRef<Personnel>);
			this._PresidentOrganisme = default(EntityRef<PresidentOrganisme>);
			this._Responsable = default(EntityRef<Responsable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ligue", DbType="Char(100)")]
		public string Ligue
		{
			get
			{
				return this._Ligue;
			}
			set
			{
				if ((this._Ligue != value))
				{
					this.OnLigueChanging(value);
					this.SendPropertyChanging();
					this._Ligue = value;
					this.SendPropertyChanged("Ligue");
					this.OnLigueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Libelle", DbType="VarChar(50)")]
		public string Libelle
		{
			get
			{
				return this._Libelle;
			}
			set
			{
				if ((this._Libelle != value))
				{
					this.OnLibelleChanging(value);
					this.SendPropertyChanging();
					this._Libelle = value;
					this.SendPropertyChanged("Libelle");
					this.OnLibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroDeclaration", DbType="NChar(20)")]
		public string NumeroDeclaration
		{
			get
			{
				return this._NumeroDeclaration;
			}
			set
			{
				if ((this._NumeroDeclaration != value))
				{
					this.OnNumeroDeclarationChanging(value);
					this.SendPropertyChanging();
					this._NumeroDeclaration = value;
					this.SendPropertyChanged("NumeroDeclaration");
					this.OnNumeroDeclarationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnneeDeclaration", DbType="Char(4)")]
		public string AnneeDeclaration
		{
			get
			{
				return this._AnneeDeclaration;
			}
			set
			{
				if ((this._AnneeDeclaration != value))
				{
					this.OnAnneeDeclarationChanging(value);
					this.SendPropertyChanging();
					this._AnneeDeclaration = value;
					this.SendPropertyChanged("AnneeDeclaration");
					this.OnAnneeDeclarationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LieuxId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LieuxId
		{
			get
			{
				return this._LieuxId;
			}
			set
			{
				if ((this._LieuxId != value))
				{
					if (this._Lieux.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLieuxIdChanging(value);
					this.SendPropertyChanging();
					this._LieuxId = value;
					this.SendPropertyChanged("LieuxId");
					this.OnLieuxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresidentId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PresidentId
		{
			get
			{
				return this._PresidentId;
			}
			set
			{
				if ((this._PresidentId != value))
				{
					if (this._PresidentOrganisme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPresidentIdChanging(value);
					this.SendPropertyChanging();
					this._PresidentId = value;
					this.SendPropertyChanged("PresidentId");
					this.OnPresidentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoordinateurId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CoordinateurId
		{
			get
			{
				return this._CoordinateurId;
			}
			set
			{
				if ((this._CoordinateurId != value))
				{
					if (this._Personnel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoordinateurIdChanging(value);
					this.SendPropertyChanging();
					this._CoordinateurId = value;
					this.SendPropertyChanged("CoordinateurId");
					this.OnCoordinateurIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirecteurId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DirecteurId
		{
			get
			{
				return this._DirecteurId;
			}
			set
			{
				if ((this._DirecteurId != value))
				{
					if (this._Personnel1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirecteurIdChanging(value);
					this.SendPropertyChanging();
					this._DirecteurId = value;
					this.SendPropertyChanged("DirecteurId");
					this.OnDirecteurIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsableId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ResponsableId
		{
			get
			{
				return this._ResponsableId;
			}
			set
			{
				if ((this._ResponsableId != value))
				{
					if (this._Responsable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponsableIdChanging(value);
					this.SendPropertyChanging();
					this._ResponsableId = value;
					this.SendPropertyChanged("ResponsableId");
					this.OnResponsableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organismes_Formations", Storage="_Formations", ThisKey="Id", OtherKey="OrganismeId")]
		public EntitySet<Formations> Formations
		{
			get
			{
				return this._Formations;
			}
			set
			{
				this._Formations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lieux_Organismes", Storage="_Lieux", ThisKey="LieuxId", OtherKey="Id", IsForeignKey=true)]
		public Lieux Lieux
		{
			get
			{
				return this._Lieux.Entity;
			}
			set
			{
				Lieux previousValue = this._Lieux.Entity;
				if (((previousValue != value) 
							|| (this._Lieux.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lieux.Entity = null;
						previousValue.Organismes.Remove(this);
					}
					this._Lieux.Entity = value;
					if ((value != null))
					{
						value.Organismes.Add(this);
						this._LieuxId = value.Id;
					}
					else
					{
						this._LieuxId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Lieux");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Organismes", Storage="_Personnel", ThisKey="CoordinateurId", OtherKey="Id", IsForeignKey=true)]
		public Personnel Personnel
		{
			get
			{
				return this._Personnel.Entity;
			}
			set
			{
				Personnel previousValue = this._Personnel.Entity;
				if (((previousValue != value) 
							|| (this._Personnel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personnel.Entity = null;
						previousValue.Organismes.Remove(this);
					}
					this._Personnel.Entity = value;
					if ((value != null))
					{
						value.Organismes.Add(this);
						this._CoordinateurId = value.Id;
					}
					else
					{
						this._CoordinateurId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Personnel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Organismes1", Storage="_Personnel1", ThisKey="DirecteurId", OtherKey="Id", IsForeignKey=true)]
		public Personnel Personnel1
		{
			get
			{
				return this._Personnel1.Entity;
			}
			set
			{
				Personnel previousValue = this._Personnel1.Entity;
				if (((previousValue != value) 
							|| (this._Personnel1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personnel1.Entity = null;
						previousValue.Organismes1.Remove(this);
					}
					this._Personnel1.Entity = value;
					if ((value != null))
					{
						value.Organismes1.Add(this);
						this._DirecteurId = value.Id;
					}
					else
					{
						this._DirecteurId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Personnel1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PresidentOrganisme_Organismes", Storage="_PresidentOrganisme", ThisKey="PresidentId", OtherKey="Id", IsForeignKey=true)]
		public PresidentOrganisme PresidentOrganisme
		{
			get
			{
				return this._PresidentOrganisme.Entity;
			}
			set
			{
				PresidentOrganisme previousValue = this._PresidentOrganisme.Entity;
				if (((previousValue != value) 
							|| (this._PresidentOrganisme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PresidentOrganisme.Entity = null;
						previousValue.Organismes.Remove(this);
					}
					this._PresidentOrganisme.Entity = value;
					if ((value != null))
					{
						value.Organismes.Add(this);
						this._PresidentId = value.Id;
					}
					else
					{
						this._PresidentId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("PresidentOrganisme");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Responsable_Organismes", Storage="_Responsable", ThisKey="ResponsableId", OtherKey="Id", IsForeignKey=true)]
		public Responsable Responsable
		{
			get
			{
				return this._Responsable.Entity;
			}
			set
			{
				Responsable previousValue = this._Responsable.Entity;
				if (((previousValue != value) 
							|| (this._Responsable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Responsable.Entity = null;
						previousValue.Organismes.Remove(this);
					}
					this._Responsable.Entity = value;
					if ((value != null))
					{
						value.Organismes.Add(this);
						this._ResponsableId = value.Id;
					}
					else
					{
						this._ResponsableId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Responsable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Formations(Formations entity)
		{
			this.SendPropertyChanging();
			entity.Organismes = this;
		}
		
		private void detach_Formations(Formations entity)
		{
			this.SendPropertyChanging();
			entity.Organismes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Passages")]
	public partial class Passages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Libelle;
		
		private EntitySet<Resultats> _Resultats;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnLibelleChanging(string value);
    partial void OnLibelleChanged();
    #endregion
		
		public Passages()
		{
			this._Resultats = new EntitySet<Resultats>(new Action<Resultats>(this.attach_Resultats), new Action<Resultats>(this.detach_Resultats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Libelle", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Libelle
		{
			get
			{
				return this._Libelle;
			}
			set
			{
				if ((this._Libelle != value))
				{
					this.OnLibelleChanging(value);
					this.SendPropertyChanging();
					this._Libelle = value;
					this.SendPropertyChanged("Libelle");
					this.OnLibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passages_Resultats", Storage="_Resultats", ThisKey="Id", OtherKey="PassagesId")]
		public EntitySet<Resultats> Resultats
		{
			get
			{
				return this._Resultats;
			}
			set
			{
				this._Resultats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resultats(Resultats entity)
		{
			this.SendPropertyChanging();
			entity.Passages = this;
		}
		
		private void detach_Resultats(Resultats entity)
		{
			this.SendPropertyChanging();
			entity.Passages = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personnel")]
	public partial class Personnel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _Telephone;
		
		private string _Email;
		
		private EntitySet<Formations> _Formations;
		
		private EntitySet<Organismes> _Organismes;
		
		private EntitySet<Organismes> _Organismes1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Personnel()
		{
			this._Formations = new EntitySet<Formations>(new Action<Formations>(this.attach_Formations), new Action<Formations>(this.detach_Formations));
			this._Organismes = new EntitySet<Organismes>(new Action<Organismes>(this.attach_Organismes), new Action<Organismes>(this.detach_Organismes));
			this._Organismes1 = new EntitySet<Organismes>(new Action<Organismes>(this.attach_Organismes1), new Action<Organismes>(this.detach_Organismes1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(50)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Formations", Storage="_Formations", ThisKey="Id", OtherKey="IdOrganisateurpeda")]
		public EntitySet<Formations> Formations
		{
			get
			{
				return this._Formations;
			}
			set
			{
				this._Formations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Organismes", Storage="_Organismes", ThisKey="Id", OtherKey="CoordinateurId")]
		public EntitySet<Organismes> Organismes
		{
			get
			{
				return this._Organismes;
			}
			set
			{
				this._Organismes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personnel_Organismes1", Storage="_Organismes1", ThisKey="Id", OtherKey="DirecteurId")]
		public EntitySet<Organismes> Organismes1
		{
			get
			{
				return this._Organismes1;
			}
			set
			{
				this._Organismes1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Formations(Formations entity)
		{
			this.SendPropertyChanging();
			entity.Personnel = this;
		}
		
		private void detach_Formations(Formations entity)
		{
			this.SendPropertyChanging();
			entity.Personnel = null;
		}
		
		private void attach_Organismes(Organismes entity)
		{
			this.SendPropertyChanging();
			entity.Personnel = this;
		}
		
		private void detach_Organismes(Organismes entity)
		{
			this.SendPropertyChanging();
			entity.Personnel = null;
		}
		
		private void attach_Organismes1(Organismes entity)
		{
			this.SendPropertyChanging();
			entity.Personnel1 = this;
		}
		
		private void detach_Organismes1(Organismes entity)
		{
			this.SendPropertyChanging();
			entity.Personnel1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Porteurs")]
	public partial class Porteurs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Etablissement;
		
		private System.Nullable<decimal> _LieuxId;
		
		private EntitySet<Formations> _Formations;
		
		private EntityRef<Lieux> _Lieux;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnEtablissementChanging(string value);
    partial void OnEtablissementChanged();
    partial void OnLieuxIdChanging(System.Nullable<decimal> value);
    partial void OnLieuxIdChanged();
    #endregion
		
		public Porteurs()
		{
			this._Formations = new EntitySet<Formations>(new Action<Formations>(this.attach_Formations), new Action<Formations>(this.detach_Formations));
			this._Lieux = default(EntityRef<Lieux>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etablissement", DbType="Char(60)")]
		public string Etablissement
		{
			get
			{
				return this._Etablissement;
			}
			set
			{
				if ((this._Etablissement != value))
				{
					this.OnEtablissementChanging(value);
					this.SendPropertyChanging();
					this._Etablissement = value;
					this.SendPropertyChanged("Etablissement");
					this.OnEtablissementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LieuxId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LieuxId
		{
			get
			{
				return this._LieuxId;
			}
			set
			{
				if ((this._LieuxId != value))
				{
					if (this._Lieux.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLieuxIdChanging(value);
					this.SendPropertyChanging();
					this._LieuxId = value;
					this.SendPropertyChanged("LieuxId");
					this.OnLieuxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Porteurs_Formations", Storage="_Formations", ThisKey="Id", OtherKey="PorteursId")]
		public EntitySet<Formations> Formations
		{
			get
			{
				return this._Formations;
			}
			set
			{
				this._Formations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lieux_Porteurs", Storage="_Lieux", ThisKey="LieuxId", OtherKey="Id", IsForeignKey=true)]
		public Lieux Lieux
		{
			get
			{
				return this._Lieux.Entity;
			}
			set
			{
				Lieux previousValue = this._Lieux.Entity;
				if (((previousValue != value) 
							|| (this._Lieux.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lieux.Entity = null;
						previousValue.Porteurs.Remove(this);
					}
					this._Lieux.Entity = value;
					if ((value != null))
					{
						value.Porteurs.Add(this);
						this._LieuxId = value.Id;
					}
					else
					{
						this._LieuxId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Lieux");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Formations(Formations entity)
		{
			this.SendPropertyChanging();
			entity.Porteurs = this;
		}
		
		private void detach_Formations(Formations entity)
		{
			this.SendPropertyChanging();
			entity.Porteurs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PresidentOrganisme")]
	public partial class PresidentOrganisme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private System.Data.Linq.Binary _Nom;
		
		private System.Data.Linq.Binary _Prenom;
		
		private string _Telephone;
		
		private string _Email;
		
		private string _Fonction;
		
		private EntitySet<Organismes> _Organismes;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnNomChanging(System.Data.Linq.Binary value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(System.Data.Linq.Binary value);
    partial void OnPrenomChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFonctionChanging(string value);
    partial void OnFonctionChanged();
    #endregion
		
		public PresidentOrganisme()
		{
			this._Organismes = new EntitySet<Organismes>(new Action<Organismes>(this.attach_Organismes), new Action<Organismes>(this.detach_Organismes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarBinary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarBinary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fonction", DbType="NVarChar(50)")]
		public string Fonction
		{
			get
			{
				return this._Fonction;
			}
			set
			{
				if ((this._Fonction != value))
				{
					this.OnFonctionChanging(value);
					this.SendPropertyChanging();
					this._Fonction = value;
					this.SendPropertyChanged("Fonction");
					this.OnFonctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PresidentOrganisme_Organismes", Storage="_Organismes", ThisKey="Id", OtherKey="PresidentId")]
		public EntitySet<Organismes> Organismes
		{
			get
			{
				return this._Organismes;
			}
			set
			{
				this._Organismes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organismes(Organismes entity)
		{
			this.SendPropertyChanging();
			entity.PresidentOrganisme = this;
		}
		
		private void detach_Organismes(Organismes entity)
		{
			this.SendPropertyChanging();
			entity.PresidentOrganisme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prestataires")]
	public partial class Prestataires : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Nom;
		
		private System.Nullable<bool> _MiseADispoInstallation;
		
		private System.Nullable<bool> _GestionPaieFormateurs;
		
		private System.Nullable<bool> _CoPortage;
		
		private System.Nullable<bool> _GestionAdministrative;
		
		private string _Autre;
		
		private System.Nullable<decimal> _LieuxId;
		
		private EntityRef<Lieux> _Lieux;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnMiseADispoInstallationChanging(System.Nullable<bool> value);
    partial void OnMiseADispoInstallationChanged();
    partial void OnGestionPaieFormateursChanging(System.Nullable<bool> value);
    partial void OnGestionPaieFormateursChanged();
    partial void OnCoPortageChanging(System.Nullable<bool> value);
    partial void OnCoPortageChanged();
    partial void OnGestionAdministrativeChanging(System.Nullable<bool> value);
    partial void OnGestionAdministrativeChanged();
    partial void OnAutreChanging(string value);
    partial void OnAutreChanged();
    partial void OnLieuxIdChanging(System.Nullable<decimal> value);
    partial void OnLieuxIdChanged();
    #endregion
		
		public Prestataires()
		{
			this._Lieux = default(EntityRef<Lieux>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="Char(250)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiseADispoInstallation", DbType="Bit")]
		public System.Nullable<bool> MiseADispoInstallation
		{
			get
			{
				return this._MiseADispoInstallation;
			}
			set
			{
				if ((this._MiseADispoInstallation != value))
				{
					this.OnMiseADispoInstallationChanging(value);
					this.SendPropertyChanging();
					this._MiseADispoInstallation = value;
					this.SendPropertyChanged("MiseADispoInstallation");
					this.OnMiseADispoInstallationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GestionPaieFormateurs", DbType="Bit")]
		public System.Nullable<bool> GestionPaieFormateurs
		{
			get
			{
				return this._GestionPaieFormateurs;
			}
			set
			{
				if ((this._GestionPaieFormateurs != value))
				{
					this.OnGestionPaieFormateursChanging(value);
					this.SendPropertyChanging();
					this._GestionPaieFormateurs = value;
					this.SendPropertyChanged("GestionPaieFormateurs");
					this.OnGestionPaieFormateursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoPortage", DbType="Bit")]
		public System.Nullable<bool> CoPortage
		{
			get
			{
				return this._CoPortage;
			}
			set
			{
				if ((this._CoPortage != value))
				{
					this.OnCoPortageChanging(value);
					this.SendPropertyChanging();
					this._CoPortage = value;
					this.SendPropertyChanged("CoPortage");
					this.OnCoPortageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GestionAdministrative", DbType="Bit")]
		public System.Nullable<bool> GestionAdministrative
		{
			get
			{
				return this._GestionAdministrative;
			}
			set
			{
				if ((this._GestionAdministrative != value))
				{
					this.OnGestionAdministrativeChanging(value);
					this.SendPropertyChanging();
					this._GestionAdministrative = value;
					this.SendPropertyChanged("GestionAdministrative");
					this.OnGestionAdministrativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autre", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Autre
		{
			get
			{
				return this._Autre;
			}
			set
			{
				if ((this._Autre != value))
				{
					this.OnAutreChanging(value);
					this.SendPropertyChanging();
					this._Autre = value;
					this.SendPropertyChanged("Autre");
					this.OnAutreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LieuxId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LieuxId
		{
			get
			{
				return this._LieuxId;
			}
			set
			{
				if ((this._LieuxId != value))
				{
					if (this._Lieux.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLieuxIdChanging(value);
					this.SendPropertyChanging();
					this._LieuxId = value;
					this.SendPropertyChanged("LieuxId");
					this.OnLieuxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lieux_Prestataires", Storage="_Lieux", ThisKey="LieuxId", OtherKey="Id", IsForeignKey=true)]
		public Lieux Lieux
		{
			get
			{
				return this._Lieux.Entity;
			}
			set
			{
				Lieux previousValue = this._Lieux.Entity;
				if (((previousValue != value) 
							|| (this._Lieux.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lieux.Entity = null;
						previousValue.Prestataires.Remove(this);
					}
					this._Lieux.Entity = value;
					if ((value != null))
					{
						value.Prestataires.Add(this);
						this._LieuxId = value.Id;
					}
					else
					{
						this._LieuxId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Lieux");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Responsable")]
	public partial class Responsable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _Licence;
		
		private string _Telephone;
		
		private string _Email;
		
		private string _Password;
		
		private EntitySet<Organismes> _Organismes;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnLicenceChanging(string value);
    partial void OnLicenceChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Responsable()
		{
			this._Organismes = new EntitySet<Organismes>(new Action<Organismes>(this.attach_Organismes), new Action<Organismes>(this.detach_Organismes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(50)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Licence", DbType="VarChar(50)")]
		public string Licence
		{
			get
			{
				return this._Licence;
			}
			set
			{
				if ((this._Licence != value))
				{
					this.OnLicenceChanging(value);
					this.SendPropertyChanging();
					this._Licence = value;
					this.SendPropertyChanged("Licence");
					this.OnLicenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Responsable_Organismes", Storage="_Organismes", ThisKey="Id", OtherKey="ResponsableId")]
		public EntitySet<Organismes> Organismes
		{
			get
			{
				return this._Organismes;
			}
			set
			{
				this._Organismes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organismes(Organismes entity)
		{
			this.SendPropertyChanging();
			entity.Responsable = this;
		}
		
		private void detach_Organismes(Organismes entity)
		{
			this.SendPropertyChanging();
			entity.Responsable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resultats")]
	public partial class Resultats : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private decimal _CandidatFormationId;
		
		private System.Nullable<bool> _FormationValidee;
		
		private string _NumeroDiplome;
		
		private System.Nullable<bool> _EPEF;
		
		private System.Nullable<bool> _EPMSP;
		
		private decimal _PassagesId;
		
		private string _FormationTerminee;
		
		private string _Abandon;
		
		private EntitySet<ResultatsUC> _ResultatsUC;
		
		private EntityRef<CandidatsFormations> _CandidatsFormations;
		
		private EntityRef<Passages> _Passages;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnCandidatFormationIdChanging(decimal value);
    partial void OnCandidatFormationIdChanged();
    partial void OnFormationValideeChanging(System.Nullable<bool> value);
    partial void OnFormationValideeChanged();
    partial void OnNumeroDiplomeChanging(string value);
    partial void OnNumeroDiplomeChanged();
    partial void OnEPEFChanging(System.Nullable<bool> value);
    partial void OnEPEFChanged();
    partial void OnEPMSPChanging(System.Nullable<bool> value);
    partial void OnEPMSPChanged();
    partial void OnPassagesIdChanging(decimal value);
    partial void OnPassagesIdChanged();
    partial void OnFormationTermineeChanging(string value);
    partial void OnFormationTermineeChanged();
    partial void OnAbandonChanging(string value);
    partial void OnAbandonChanged();
    #endregion
		
		public Resultats()
		{
			this._ResultatsUC = new EntitySet<ResultatsUC>(new Action<ResultatsUC>(this.attach_ResultatsUC), new Action<ResultatsUC>(this.detach_ResultatsUC));
			this._CandidatsFormations = default(EntityRef<CandidatsFormations>);
			this._Passages = default(EntityRef<Passages>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidatFormationId", DbType="Decimal(18,0) NOT NULL")]
		public decimal CandidatFormationId
		{
			get
			{
				return this._CandidatFormationId;
			}
			set
			{
				if ((this._CandidatFormationId != value))
				{
					if (this._CandidatsFormations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidatFormationIdChanging(value);
					this.SendPropertyChanging();
					this._CandidatFormationId = value;
					this.SendPropertyChanged("CandidatFormationId");
					this.OnCandidatFormationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormationValidee", DbType="Bit")]
		public System.Nullable<bool> FormationValidee
		{
			get
			{
				return this._FormationValidee;
			}
			set
			{
				if ((this._FormationValidee != value))
				{
					this.OnFormationValideeChanging(value);
					this.SendPropertyChanging();
					this._FormationValidee = value;
					this.SendPropertyChanged("FormationValidee");
					this.OnFormationValideeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroDiplome", DbType="Char(60)")]
		public string NumeroDiplome
		{
			get
			{
				return this._NumeroDiplome;
			}
			set
			{
				if ((this._NumeroDiplome != value))
				{
					this.OnNumeroDiplomeChanging(value);
					this.SendPropertyChanging();
					this._NumeroDiplome = value;
					this.SendPropertyChanged("NumeroDiplome");
					this.OnNumeroDiplomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPEF", DbType="Bit")]
		public System.Nullable<bool> EPEF
		{
			get
			{
				return this._EPEF;
			}
			set
			{
				if ((this._EPEF != value))
				{
					this.OnEPEFChanging(value);
					this.SendPropertyChanging();
					this._EPEF = value;
					this.SendPropertyChanged("EPEF");
					this.OnEPEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPMSP", DbType="Bit")]
		public System.Nullable<bool> EPMSP
		{
			get
			{
				return this._EPMSP;
			}
			set
			{
				if ((this._EPMSP != value))
				{
					this.OnEPMSPChanging(value);
					this.SendPropertyChanging();
					this._EPMSP = value;
					this.SendPropertyChanged("EPMSP");
					this.OnEPMSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassagesId", DbType="Decimal(18,0) NOT NULL")]
		public decimal PassagesId
		{
			get
			{
				return this._PassagesId;
			}
			set
			{
				if ((this._PassagesId != value))
				{
					if (this._Passages.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPassagesIdChanging(value);
					this.SendPropertyChanging();
					this._PassagesId = value;
					this.SendPropertyChanged("PassagesId");
					this.OnPassagesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormationTerminee", DbType="VarChar(1)")]
		public string FormationTerminee
		{
			get
			{
				return this._FormationTerminee;
			}
			set
			{
				if ((this._FormationTerminee != value))
				{
					this.OnFormationTermineeChanging(value);
					this.SendPropertyChanging();
					this._FormationTerminee = value;
					this.SendPropertyChanged("FormationTerminee");
					this.OnFormationTermineeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abandon", DbType="VarChar(1)")]
		public string Abandon
		{
			get
			{
				return this._Abandon;
			}
			set
			{
				if ((this._Abandon != value))
				{
					this.OnAbandonChanging(value);
					this.SendPropertyChanging();
					this._Abandon = value;
					this.SendPropertyChanged("Abandon");
					this.OnAbandonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resultats_ResultatsUC", Storage="_ResultatsUC", ThisKey="Id", OtherKey="ResultatsId")]
		public EntitySet<ResultatsUC> ResultatsUC
		{
			get
			{
				return this._ResultatsUC;
			}
			set
			{
				this._ResultatsUC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidatsFormations_Resultats", Storage="_CandidatsFormations", ThisKey="CandidatFormationId", OtherKey="Id", IsForeignKey=true)]
		public CandidatsFormations CandidatsFormations
		{
			get
			{
				return this._CandidatsFormations.Entity;
			}
			set
			{
				CandidatsFormations previousValue = this._CandidatsFormations.Entity;
				if (((previousValue != value) 
							|| (this._CandidatsFormations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CandidatsFormations.Entity = null;
						previousValue.Resultats.Remove(this);
					}
					this._CandidatsFormations.Entity = value;
					if ((value != null))
					{
						value.Resultats.Add(this);
						this._CandidatFormationId = value.Id;
					}
					else
					{
						this._CandidatFormationId = default(decimal);
					}
					this.SendPropertyChanged("CandidatsFormations");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passages_Resultats", Storage="_Passages", ThisKey="PassagesId", OtherKey="Id", IsForeignKey=true)]
		public Passages Passages
		{
			get
			{
				return this._Passages.Entity;
			}
			set
			{
				Passages previousValue = this._Passages.Entity;
				if (((previousValue != value) 
							|| (this._Passages.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Passages.Entity = null;
						previousValue.Resultats.Remove(this);
					}
					this._Passages.Entity = value;
					if ((value != null))
					{
						value.Resultats.Add(this);
						this._PassagesId = value.Id;
					}
					else
					{
						this._PassagesId = default(decimal);
					}
					this.SendPropertyChanged("Passages");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResultatsUC(ResultatsUC entity)
		{
			this.SendPropertyChanging();
			entity.Resultats = this;
		}
		
		private void detach_ResultatsUC(ResultatsUC entity)
		{
			this.SendPropertyChanging();
			entity.Resultats = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultatsUC")]
	public partial class ResultatsUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Libelle;
		
		private System.Nullable<decimal> _Resultat;
		
		private System.Nullable<decimal> _ResultatsId;
		
		private System.Nullable<decimal> _ResultatMax;
		
		private EntityRef<Resultats> _Resultats;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnLibelleChanging(string value);
    partial void OnLibelleChanged();
    partial void OnResultatChanging(System.Nullable<decimal> value);
    partial void OnResultatChanged();
    partial void OnResultatsIdChanging(System.Nullable<decimal> value);
    partial void OnResultatsIdChanged();
    partial void OnResultatMaxChanging(System.Nullable<decimal> value);
    partial void OnResultatMaxChanged();
    #endregion
		
		public ResultatsUC()
		{
			this._Resultats = default(EntityRef<Resultats>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Libelle", DbType="VarChar(50)")]
		public string Libelle
		{
			get
			{
				return this._Libelle;
			}
			set
			{
				if ((this._Libelle != value))
				{
					this.OnLibelleChanging(value);
					this.SendPropertyChanging();
					this._Libelle = value;
					this.SendPropertyChanged("Libelle");
					this.OnLibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resultat", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Resultat
		{
			get
			{
				return this._Resultat;
			}
			set
			{
				if ((this._Resultat != value))
				{
					this.OnResultatChanging(value);
					this.SendPropertyChanging();
					this._Resultat = value;
					this.SendPropertyChanged("Resultat");
					this.OnResultatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultatsId", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ResultatsId
		{
			get
			{
				return this._ResultatsId;
			}
			set
			{
				if ((this._ResultatsId != value))
				{
					if (this._Resultats.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResultatsIdChanging(value);
					this.SendPropertyChanging();
					this._ResultatsId = value;
					this.SendPropertyChanged("ResultatsId");
					this.OnResultatsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultatMax", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ResultatMax
		{
			get
			{
				return this._ResultatMax;
			}
			set
			{
				if ((this._ResultatMax != value))
				{
					this.OnResultatMaxChanging(value);
					this.SendPropertyChanging();
					this._ResultatMax = value;
					this.SendPropertyChanged("ResultatMax");
					this.OnResultatMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resultats_ResultatsUC", Storage="_Resultats", ThisKey="ResultatsId", OtherKey="Id", IsForeignKey=true)]
		public Resultats Resultats
		{
			get
			{
				return this._Resultats.Entity;
			}
			set
			{
				Resultats previousValue = this._Resultats.Entity;
				if (((previousValue != value) 
							|| (this._Resultats.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resultats.Entity = null;
						previousValue.ResultatsUC.Remove(this);
					}
					this._Resultats.Entity = value;
					if ((value != null))
					{
						value.ResultatsUC.Add(this);
						this._ResultatsId = value.Id;
					}
					else
					{
						this._ResultatsId = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("Resultats");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sexes")]
	public partial class Sexes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private System.Nullable<char> _Code;
		
		private string _Libelle;
		
		private EntitySet<Candidats> _Candidats;
		
		private EntitySet<CandidatsFormations> _CandidatsFormations;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnCodeChanging(System.Nullable<char> value);
    partial void OnCodeChanged();
    partial void OnLibelleChanging(string value);
    partial void OnLibelleChanged();
    #endregion
		
		public Sexes()
		{
			this._Candidats = new EntitySet<Candidats>(new Action<Candidats>(this.attach_Candidats), new Action<Candidats>(this.detach_Candidats));
			this._CandidatsFormations = new EntitySet<CandidatsFormations>(new Action<CandidatsFormations>(this.attach_CandidatsFormations), new Action<CandidatsFormations>(this.detach_CandidatsFormations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(1)")]
		public System.Nullable<char> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Libelle", DbType="Char(10)")]
		public string Libelle
		{
			get
			{
				return this._Libelle;
			}
			set
			{
				if ((this._Libelle != value))
				{
					this.OnLibelleChanging(value);
					this.SendPropertyChanging();
					this._Libelle = value;
					this.SendPropertyChanged("Libelle");
					this.OnLibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexes_Candidats", Storage="_Candidats", ThisKey="Id", OtherKey="SexeId")]
		public EntitySet<Candidats> Candidats
		{
			get
			{
				return this._Candidats;
			}
			set
			{
				this._Candidats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexes_CandidatsFormations", Storage="_CandidatsFormations", ThisKey="Id", OtherKey="SexeId")]
		public EntitySet<CandidatsFormations> CandidatsFormations
		{
			get
			{
				return this._CandidatsFormations;
			}
			set
			{
				this._CandidatsFormations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Candidats(Candidats entity)
		{
			this.SendPropertyChanging();
			entity.Sexes = this;
		}
		
		private void detach_Candidats(Candidats entity)
		{
			this.SendPropertyChanging();
			entity.Sexes = null;
		}
		
		private void attach_CandidatsFormations(CandidatsFormations entity)
		{
			this.SendPropertyChanging();
			entity.Sexes = this;
		}
		
		private void detach_CandidatsFormations(CandidatsFormations entity)
		{
			this.SendPropertyChanging();
			entity.Sexes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tuteurs")]
	public partial class Tuteurs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _NumeroLicence;
		
		private string _Email;
		
		private EntitySet<CandidatsFormations> _CandidatsFormations;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnNumeroLicenceChanging(string value);
    partial void OnNumeroLicenceChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Tuteurs()
		{
			this._CandidatsFormations = new EntitySet<CandidatsFormations>(new Action<CandidatsFormations>(this.attach_CandidatsFormations), new Action<CandidatsFormations>(this.detach_CandidatsFormations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="Char(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="Char(50)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroLicence", DbType="Char(20)")]
		public string NumeroLicence
		{
			get
			{
				return this._NumeroLicence;
			}
			set
			{
				if ((this._NumeroLicence != value))
				{
					this.OnNumeroLicenceChanging(value);
					this.SendPropertyChanging();
					this._NumeroLicence = value;
					this.SendPropertyChanged("NumeroLicence");
					this.OnNumeroLicenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Char(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tuteurs_CandidatsFormations", Storage="_CandidatsFormations", ThisKey="Id", OtherKey="TuteursId")]
		public EntitySet<CandidatsFormations> CandidatsFormations
		{
			get
			{
				return this._CandidatsFormations;
			}
			set
			{
				this._CandidatsFormations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CandidatsFormations(CandidatsFormations entity)
		{
			this.SendPropertyChanging();
			entity.Tuteurs = this;
		}
		
		private void detach_CandidatsFormations(CandidatsFormations entity)
		{
			this.SendPropertyChanging();
			entity.Tuteurs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypedeFinancements")]
	public partial class TypedeFinancements : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Libelle;
		
		private EntitySet<CandidatsFormations> _CandidatsFormations;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnLibelleChanging(string value);
    partial void OnLibelleChanged();
    #endregion
		
		public TypedeFinancements()
		{
			this._CandidatsFormations = new EntitySet<CandidatsFormations>(new Action<CandidatsFormations>(this.attach_CandidatsFormations), new Action<CandidatsFormations>(this.detach_CandidatsFormations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Libelle", DbType="Char(20)")]
		public string Libelle
		{
			get
			{
				return this._Libelle;
			}
			set
			{
				if ((this._Libelle != value))
				{
					this.OnLibelleChanging(value);
					this.SendPropertyChanging();
					this._Libelle = value;
					this.SendPropertyChanged("Libelle");
					this.OnLibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypedeFinancements_CandidatsFormations", Storage="_CandidatsFormations", ThisKey="Id", OtherKey="TypedeFinancementsId")]
		public EntitySet<CandidatsFormations> CandidatsFormations
		{
			get
			{
				return this._CandidatsFormations;
			}
			set
			{
				this._CandidatsFormations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CandidatsFormations(CandidatsFormations entity)
		{
			this.SendPropertyChanging();
			entity.TypedeFinancements = this;
		}
		
		private void detach_CandidatsFormations(CandidatsFormations entity)
		{
			this.SendPropertyChanging();
			entity.TypedeFinancements = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypedeFormations")]
	public partial class TypedeFormations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Libelle;
		
		private EntitySet<Formations> _Formations;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnLibelleChanging(string value);
    partial void OnLibelleChanged();
    #endregion
		
		public TypedeFormations()
		{
			this._Formations = new EntitySet<Formations>(new Action<Formations>(this.attach_Formations), new Action<Formations>(this.detach_Formations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Libelle", DbType="Char(40)")]
		public string Libelle
		{
			get
			{
				return this._Libelle;
			}
			set
			{
				if ((this._Libelle != value))
				{
					this.OnLibelleChanging(value);
					this.SendPropertyChanging();
					this._Libelle = value;
					this.SendPropertyChanged("Libelle");
					this.OnLibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypedeFormations_Formations", Storage="_Formations", ThisKey="Id", OtherKey="TypedeFormationsId")]
		public EntitySet<Formations> Formations
		{
			get
			{
				return this._Formations;
			}
			set
			{
				this._Formations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Formations(Formations entity)
		{
			this.SendPropertyChanging();
			entity.TypedeFormations = this;
		}
		
		private void detach_Formations(Formations entity)
		{
			this.SendPropertyChanging();
			entity.TypedeFormations = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeOrganisateurs")]
	public partial class TypeOrganisateurs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Libelle;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnLibelleChanging(string value);
    partial void OnLibelleChanged();
    #endregion
		
		public TypeOrganisateurs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Libelle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Libelle
		{
			get
			{
				return this._Libelle;
			}
			set
			{
				if ((this._Libelle != value))
				{
					this.OnLibelleChanging(value);
					this.SendPropertyChanging();
					this._Libelle = value;
					this.SendPropertyChanged("Libelle");
					this.OnLibelleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilisateurs")]
	public partial class Utilisateurs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _UserLogin;
		
		private string _MotdePasse;
		
		private EntitySet<UtilisateursLiguesDroits> _UtilisateursLiguesDroits;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnUserLoginChanging(string value);
    partial void OnUserLoginChanged();
    partial void OnMotdePasseChanging(string value);
    partial void OnMotdePasseChanged();
    #endregion
		
		public Utilisateurs()
		{
			this._UtilisateursLiguesDroits = new EntitySet<UtilisateursLiguesDroits>(new Action<UtilisateursLiguesDroits>(this.attach_UtilisateursLiguesDroits), new Action<UtilisateursLiguesDroits>(this.detach_UtilisateursLiguesDroits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(50)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLogin", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UserLogin
		{
			get
			{
				return this._UserLogin;
			}
			set
			{
				if ((this._UserLogin != value))
				{
					this.OnUserLoginChanging(value);
					this.SendPropertyChanging();
					this._UserLogin = value;
					this.SendPropertyChanged("UserLogin");
					this.OnUserLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotdePasse", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string MotdePasse
		{
			get
			{
				return this._MotdePasse;
			}
			set
			{
				if ((this._MotdePasse != value))
				{
					this.OnMotdePasseChanging(value);
					this.SendPropertyChanging();
					this._MotdePasse = value;
					this.SendPropertyChanged("MotdePasse");
					this.OnMotdePasseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateurs_UtilisateursLiguesDroits", Storage="_UtilisateursLiguesDroits", ThisKey="Id", OtherKey="IdUtilisateur")]
		public EntitySet<UtilisateursLiguesDroits> UtilisateursLiguesDroits
		{
			get
			{
				return this._UtilisateursLiguesDroits;
			}
			set
			{
				this._UtilisateursLiguesDroits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UtilisateursLiguesDroits(UtilisateursLiguesDroits entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateurs = this;
		}
		
		private void detach_UtilisateursLiguesDroits(UtilisateursLiguesDroits entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateurs = null;
		}
	}
}
#pragma warning restore 1591
